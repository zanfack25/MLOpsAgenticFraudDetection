name: Build and Deploy Container to EKS

on:
  push:
    branches: [main]

env:
  MODEL_BUCKET: dav-fraud-detection-models
  AWS_REGION: ca-central-1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fraud-detection-ecr-registry
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "ECR_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update kubeconfig to connect to EKS
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name FraudDetectionEKSCluster

      - name: Run training job on EKS
        run: |
          kubectl delete job train-agents-job --ignore-not-found
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: train-agents-job
            namespace: default
          spec:
            template:
              metadata:
                labels:
                  app: fraud-detection
              spec:
                containers:
                  - name: fraud-detection
                    image: ${{ env.ECR_IMAGE }}
                    command:
                      - python
                      - app/train_all_agents.py
                    env:
                      - name: MODEL_BUCKET
                        value: ${{ env.MODEL_BUCKET }}
                    resources:
                      requests:
                        cpu: "2000m"
                        memory: "4Gi"
                      limits:
                        cpu: "4000m"
                        memory: "8Gi"
                restartPolicy: Never
          EOF

      - name: Wait for training job to complete
        run: |
          kubectl wait --for=condition=complete --timeout=600s job/train-agents-job

      - name: Run evaluation job on EKS
        run: |
          kubectl delete job evaluate-agents-job --ignore-not-found
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: evaluate-agents-job
            namespace: default
          spec:
            template:
              metadata:
                labels:
                  app: fraud-detection
              spec:
                containers:
                  - name: fraud-detection
                    image: ${{ env.ECR_IMAGE }}
                    command:
                      - python
                      - app/evaluate_all_agents.py
                    env:
                      - name: MODEL_BUCKET
                        value: ${{ env.MODEL_BUCKET }}
                    resources:
                      requests:
                        cpu: "2000m"
                        memory: "4Gi"
                      limits:
                        cpu: "4000m"
                        memory: "8Gi"
                restartPolicy: Never
          EOF
